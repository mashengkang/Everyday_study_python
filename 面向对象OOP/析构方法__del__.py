# coding:utf-8


'''
__del__
    析构方法会在对象被销毁时自动触发
    作用:关闭一些开发的资源
    注意:是对象被销毁时触发了这个方法,而不是这个方法销毁了对象
对象会在哪些情况下被销毁?
    1. 当程序执行完毕, 内存中所有的资源都被销毁释放
    2. 使用 del 删除时
    3. 对象不在被引用时,会自动销毁

定义一个类,完成一个信息的记录
    调用类的时候,传递一个日志信息
    这个对象会创建一个文件,开始写入,并在最后关闭这个文件
'''

import time


class WriteLog():
    fileurl = './'  # 文件的路径
    filename = str(time.strftime("%Y-%m-%d"))  # 日志文件的名称

    # 初始化 打开文件
    def __init__(self):
        self.fileobj = open(self.fileurl+self.filename + '.txt', 'a+', encoding="utf-8")

    # 写日志方法
    def log(self, s):
        print(f'把日志:"{s}"写入文件中')

    # 析构方法
    def __del__(self):
        print('析构方法触发了')
        # 在对象被销毁时,关闭在初始化方法中打开的文件对象
        self.fileobj.close()

# l = WriteLog()
# l.log('今天天气不错')

# 使用del手动删除
# del l

# print('...')
'''
输出内容(del l 不执行):
把日志:"今天天气不错"写入文件中
...
析构方法触发了
'''

# 思考
class Cars():
    brand = ''

    def __init__(self, b):
        self.brand = b
        print(f'初始化方法被触发:创建{self.brand}汽车')

    def __del__(self):
        print(f'析构方法被触发:{self.brand}已经被销毁了')


# 问题1:程序的执行顺序?
# bm = Cars('宝马')
# bc = Cars('奔驰')
# fll = Cars('法拉利')
'''
初始化方法被触发:创建宝马汽车
初始化方法被触发:创建奔驰汽车
初始化方法被触发:创建法拉利汽车
析构方法被触发:宝马已经被销毁了
析构方法被触发:奔驰已经被销毁了
析构方法被触发:法拉利已经被销毁了
'''

# 问题2:程序的执行顺序?
Cars('宝马')
Cars('奔驰')
Cars('法拉利')
'''
初始化方法被触发:创建宝马汽车
析构方法被触发:宝马已经被销毁了
初始化方法被触发:创建奔驰汽车
析构方法被触发:奔驰已经被销毁了
初始化方法被触发:创建法拉利汽车
析构方法被触发:法拉利已经被销毁了
总结:对象被销毁的原因之一:对象创建完以后,没有被引动,所以直接销毁
'''